
datin = dat;



load bx1[19,12]  = bx1.raw;
load bx0[19,12]  = bx0.raw;

theta0 = theta;

/**************************************************************/

/*--------------------------------(1)  A procedure that defines the marginals as a function of beta -------------------*/

proc marg(theta);

local nn,hsvar1,hsvar0, flhs, parhs,probvec, dpfactors,dpi0,dpi1,prob1, prob0, kk, marx, mm ;
local  t2h, pt2h, pt2 ;
local tl, th, vl, vh ;
local pl1, pl2, pl3, pl4, pl5, pl6, ph1, ph2, ph3, ph4, ph5, ph6, pm1, pm2, pm3, pm4, pm5, pm6, pt2h1, pt2h2, pt2h3, pt2h4, pt2h5, pt2h6 ;
local pt21, pt22, pt23, pt24, pt25, pt26, pvh1, pvh2, pvh3, pvh4, pvh5, pvh6, pvl1, pvl2, pvl3, pvl4, pvl5, pvl6,ed1,ed2,ed3,ed4,ed5,ed6 ;

hsvar1 = bx1';
hsvar0 = bx0';
nn = rows(hsvar1);


flhs = theta[gt1:gvp]   ;


parhs = theta[1:hse] | flhs ;


/* Collect the probabilities*/

pl4 =  exp(theta[pt1f+6])/( 1+ exp(theta[pt1f+6])+ exp(theta[pt1f+7]));
ph4 =  exp(theta[pt1f+7])/( 1+ exp(theta[pt1f+6])+ exp(theta[pt1f+7])) ;
pm4 = 1/( 1+ exp(theta[pt1f+6])+ exp(theta[pt1f+7])) ;



pvh4 =  cdfn(theta[pvf+3]) ;
pvl4 =  1-pvh4;



pt2h4 =  cdfn(theta[pt2f+3]) ;
pt24 =  1-pt2h4;

probvec = 
ph4*pvh4*pt2h4~pl4*pvh4*pt2h4~pm4*pvh4*pt2h4~ph4*pvl4*pt2h4~pl4*pvl4*pt2h4~pm4*pvl4*pt2h4~
ph4*pvh4*pt24~pl4*pvh4*pt24~pm4*pvh4*pt24~ph4*pvl4*pt24~pl4*pvl4*pt24~pm4*pvl4*pt24;


/*the factors*/
th = theta[t1hf] ;
tl = theta[t1lf] ;
vh = theta[vpf] ;
t2h = theta[t2f] ;

dpfactors = th ~  tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1) ~  th ~ tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1)  |
t2h.*.ones(1,6) ~ zeros(1,6) |
vh~ vh~ vh~zeros(1,3)  ~vh~  vh ~ vh~zeros(1,3)  
 ;




/****************************CONTRIBUTIONS*************************/


/*first define the XB vectors*/


dpi0 = zeros(nn,12) ;
dpi1 = zeros(nn,12) ;

kk = 1 ;
do until kk > nn ;

mm = 1 ;

do until mm >12 ;

dpi0[kk,mm] = (hsvar0[kk,.]~dpfactors[.,mm]')*parhs ;
dpi1[kk,mm] = (hsvar1[kk,.]~dpfactors[.,mm]')*parhs ;

mm = mm + 1 ;

endo ;

kk = kk + 1 ;
endo;

prob1 = cdfn(dpi1)*probvec' ;
prob0 = cdfn(dpi0)*probvec' ;


marx =prob1-prob0 ;

retp(marx);

 
endp ;

marginals = marg(theta0);

D= gradp(&marg,theta0) ;

VAR = D*clusvarmat*D' ;

se = sqrt(diag(VAR));

margout = marginals~se ;
label = { fi	ped2	ped3 	ped4 	ped5 	ped6 			rural		moves	otfam	 nsib bmon yune } ;
printmar = label' ~ margout ;
pval = 0 ~ 1 ~ 1  ;
outprint = printfmt(printmar,pval);





/*--------------------------------(2)  A procedure that defines the predicted probabilities as a function of B -------------------*/



proc predprod(theta);

local nn,hsvar1,hsvar0, flhs, parhs,probvec, th,tl,tm,vh,dpfactors,dpi0,dpi1,prob1, prob0, kk, marx, mm, pp ;
local pt2h, pt2 ;
local t2h, predicted,predse ;
local pl1, pl2, pl3, pl4, pl5, pl6, ph1, ph2, ph3, ph4, ph5, ph6, pm1, pm2, pm3, pm4, pm5, pm6, pt2h1, pt2h2, pt2h3, pt2h4, pt2h5, pt2h6 ;
local pt21, pt22, pt23, pt24, pt25, pt26, pvh1, pvh2, pvh3, pvh4, pvh5, pvh6, pvl1, pvl2, pvl3, pvl4, pvl5, pvl6 ;

local fi, z1,z2,nsib,yune, bmon, hsvar, dpi, ped, n ;

n = rows(dat) ;
fi = dat[.,3] ;

z1 = sumr(datin[.,21:24])~ datin[.,25:29] ~ datin[.,31] ;


z2 = datin[.,33] ~ datin[.,35] + datin[.,36]  + datin[.,34];

ped = datin[.,5:9] ;

nsib = datin[.,45];
yune =  datin[.,1] ;
bmon = datin[.,46] ;


hsvar = ones(n,1)~fi~ped~z1~z2~nsib~bmon~yune ;




flhs = theta[gt1:gvp]   ;

parhs = theta[1:hse] | flhs ;



/*the factors*/
th = theta[t1hf] ;
tl = theta[t1lf] ;
vh = theta[vpf] ;
t2h = theta[t2f] ;

dpfactors = th ~  tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1) ~  th ~ tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1)  |
t2h.*.ones(1,6) ~ zeros(1,6) |
vh~ vh~ vh~zeros(1,3)  ~vh~  vh ~ vh~zeros(1,3)  
 ;



dpi = zeros(n,12) ;



mm = 1 ;

do until mm >12 ;

dpi[.,mm] = ((hsvar~(ones(1,n).*.dpfactors[.,mm])')*parhs) ;


mm = mm + 1 ;

endo ;



pp = cdfn(dpi)' ;

retp(pp);

 
endp ;

ed1 = datin[.,4] ;
ed2 = datin[.,5] ;
ed3 = datin[.,6] ;
ed4 = datin[.,7] ;
ed5 = datin[.,8] ;
ed6 = datin[.,9] ;

predicted = predprod(theta0)' ;

meanpred = meanc(selif(predicted,ed1)) ~  meanc(selif(predicted,ed2)) ~ meanc(selif(predicted,ed3))
~ meanc(selif(predicted,ed4))~ meanc(selif(predicted,ed5))~ meanc(selif(predicted,ed6)) ;

preddrop = 
meanpred[1,.] | meanpred[3,.] | meanpred[2,.] |    /* H noncog H vp*/
meanpred[7,.] | meanpred[9,.] | meanpred[8,.] |    /* L noncog H vp*/
meanpred[4,.] | meanpred[6,.] | meanpred[5,.] |    /* H noncog L vp*/
meanpred[10,.] | meanpred[12,.] | meanpred[11,.]   /* L noncog L vp*/
;

/**********************************************Standard errors for predicted values **********************************/

ii = 1 ;

proc sepred(theta);


local nn,hsvar1,hsvar0, flhs, parhs,probvec, th,tl,tm,vh,dpfactors,dpi0,dpi1,prob1, prob0, kk, marx, mm, pp ;
local pt2h, pt2 ;
local t2h, predicted,predse ;
local pl1, pl2, pl3, pl4, pl5, pl6, ph1, ph2, ph3, ph4, ph5, ph6, pm1, pm2, pm3, pm4, pm5, pm6, pt2h1, pt2h2, pt2h3, pt2h4, pt2h5, pt2h6 ;
local pt21, pt22, pt23, pt24, pt25, pt26, pvh1, pvh2, pvh3, pvh4, pvh5, pvh6, pvl1, pvl2, pvl3, pvl4, pvl5, pvl6 ;

local fi, z1,z2,nsib,yune, bmon, hsvar, dpi, ped ;


fi = dat[ii,3] ;


z1 = sumr(datin[ii,21:24])~ datin[ii,25:29] ~ datin[ii,31] ;


z2 = datin[ii,33] ~ datin[ii,35] + datin[ii,36]  + datin[ii,34];

ped = datin[ii,5:9] ;
nsib = datin[ii,45];
yune =  datin[ii,1] ;
bmon = datin[ii,46] ;


hsvar = ones(1,1) ~ fi ~ ped ~ z1~z2~nsib~bmon~yune ;

nn = rows(hsvar);


flhs = theta[gt1:gvp]   ;

parhs = theta[1:hse] | flhs ;



/*the factors*/
th = theta[t1hf] ;
tl = theta[t1lf] ;
vh = theta[vpf] ;
t2h = theta[t2f] ;

dpfactors = th ~  tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1) ~  th ~ tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1)  |
t2h.*.ones(1,6) ~ zeros(1,6) |
vh~ vh~ vh~zeros(1,3)  ~vh~  vh ~ vh~zeros(1,3)  
 ;



dpi = zeros(1,12) ;



mm = 1 ;

do until mm >12 ;

dpi[.,mm] = ((hsvar~(dpfactors[.,mm])')*parhs) ;


mm = mm + 1 ;

endo ;



pp = cdfn(dpi)' ;

retp(pp);

 
endp ;

collectvar = zeros(rows(datin),12) ;

ii = 1 ;

do until ii > rows(datin) ;

D = gradp(&sepred,theta0) ;

VAR = D*clusvarmat*D' ;

collectvar[ii,.] = diag(VAR)' ;

ii = ii + 1 ;
endo ;



predse =
(sqrt(sumc(selif(collectvar,ed1))./sumc(ed1))' |
sqrt(sumc(selif(collectvar,ed2))./sumc(ed2))' |
sqrt(sumc(selif(collectvar,ed3))./sumc(ed3))' |
sqrt(sumc(selif(collectvar,ed4))./sumc(ed4))' |
sqrt(sumc(selif(collectvar,ed5))./sumc(ed5))' |
sqrt(sumc(selif(collectvar,ed6))./sumc(ed6))')' ;


preddropse = 
predse[1,.] | predse[3,.] | predse[2,.] |    /*H noncog H VP*/
predse[7,.] | predse[9,.] | predse[8,.] |     /*L noncog H VP*/
predse[4,.] | predse[6,.] | predse[5,.] |    /*H noncog L VP*/ 
predse[10,.] | predse[12,.] | predse[11,.]     /*L noncog L VP*/
;





labelp = { H.H.H  M.H.H L.H.H H.L.H M.L.H L.L.H  H.H.L M.H.L L.H.L H.L.L M.L.L L.L.L } ;
printmarp = labelp' ~ preddrop ;
pvalp = 0 ~ 1 ~ 1~ 1~1~1~1;

printmarpse = labelp' ~ preddropse ;


/*--------------------------------(4)  A procedure that defines the probability weights as a function of B -------------------*/


proc pdist(theta);

local probvec, ppvec ;

local t2h, predicted,predse ;
local pl1, pl2, pl3, pl4, pl5, pl6, ph1, ph2, ph3, ph4, ph5, ph6, pm1, pm2, pm3, pm4, pm5, pm6, pt2h1, pt2h2, pt2h3, pt2h4, pt2h5, pt2h6 ;
local pt21, pt22, pt23, pt24, pt25, pt26, pvh1, pvh2, pvh3, pvh4, pvh5, pvh6, pvl1, pvl2, pvl3, pvl4, pvl5, pvl6 ;



pl1 =  exp(theta[pt1f])/( 1+ exp(theta[pt1f])+ exp(theta[pt1f+1]));
ph1 =  exp(theta[pt1f+1])/( 1+ exp(theta[pt1f])+ exp(theta[pt1f+1])) ;
pm1 = 1/( 1+ exp(theta[pt1f+1])+ exp(theta[pt1f])) ;

pl2 =  exp(theta[pt1f+2])/( 1+ exp(theta[pt1f+3])+ exp(theta[pt1f+2]));
ph2 =  exp(theta[pt1f+3])/( 1+ exp(theta[pt1f+3])+ exp(theta[pt1f+2])) ;
pm2 = 1/( 1+ exp(theta[pt1f+2])+ exp(theta[pt1f+3])) ;

pl3 =  exp(theta[pt1f+4])/( 1+ exp(theta[pt1f+4])+ exp(theta[pt1f+5]));
ph3 =  exp(theta[pt1f+5])/( 1+ exp(theta[pt1f+4])+ exp(theta[pt1f+5])) ;
pm3 = 1/( 1+ exp(theta[pt1f+4])+ exp(theta[pt1f+5])) ;

pl4 =  exp(theta[pt1f+6])/( 1+ exp(theta[pt1f+6])+ exp(theta[pt1f+7]));
ph4 =  exp(theta[pt1f+7])/( 1+ exp(theta[pt1f+6])+ exp(theta[pt1f+7])) ;
pm4 = 1/( 1+ exp(theta[pt1f+6])+ exp(theta[pt1f+7])) ;

pl5 =  exp(theta[pt1f+8])/( 1+ exp(theta[pt1f+8])+ exp(theta[pt1f+9]));
ph5 =  exp(theta[pt1f+9])/( 1+ exp(theta[pt1f+8])+ exp(theta[pt1f+9])) ;
pm5 = 1/( 1+ exp(theta[pt1f+8])+ exp(theta[pt1f+9])) ;

pl6 =  exp(theta[pt1f+10])/( 1+ exp(theta[pt1f+10])+ exp(theta[pt1f+11]));
ph6 =  exp(theta[pt1f+11])/( 1+ exp(theta[pt1f+10])+ exp(theta[pt1f+11])) ;
pm6 = 1/( 1+ exp(theta[pt1f+10])+ exp(theta[pt1f+11])) ;



pt2h1 =  cdfn(theta[pt2f]) ;
pt21 =  1-pt2h1;

pt2h2 =  cdfn(theta[pt2f+1]) ;
pt22 =  1-pt2h2;

pt2h3 =  cdfn(theta[pt2f+2]) ;
pt23 =  1-pt2h3;

pt2h4 =  cdfn(theta[pt2f+3]) ;
pt24 =  1-pt2h4;

pt2h5 =  cdfn(theta[pt2f+4]) ;
pt25 =  1-pt2h5;

pt2h6 =  cdfn(theta[pt2f+5]) ;
pt26 =  1-pt2h6;



pvh1 =  cdfn(theta[pvf]) ;
pvl1 =  1-pvh1;

pvh2 =  cdfn(theta[pvf+1]) ;
pvl2 =  1-pvh2;

pvh3 =  cdfn(theta[pvf+2]) ;
pvl3 =  1-pvh3;

pvh4 =  cdfn(theta[pvf+3]) ;
pvl4 =  1-pvh4;


pvh5 =  cdfn(theta[pvf+4]);
pvl5 =  1-pvh5;

pvh6 = cdfn(theta[pvf+5]) ;
pvl6 = 1-pvh6;

/* H M L 0 H M  L 0 */
/* H H H H  0 0 0 0*/




ppvec = ph1 | pm1 | pl1  | pt2h1 | pt21 | pvh1 | pvl1 | 
ph2 | pm2 | pl2  | pt2h2 | pt22 | pvh2 | pvl2 | 
ph3 | pm3 | pl3  | pt2h3 | pt23 | pvh3 | pvl3 | 
ph4 | pm4 | pl4  | pt2h4 | pt24 | pvh4 | pvl4 | 
ph5 | pm5 | pl5  | pt2h5 | pt25 | pvh5 | pvl5 | 
ph6 | pm6 | pl6  | pt2h6 | pt26 | pvh6 | pvl6 |
ph1*pvh1*pt2h1 | pm1*pvh1*pt2h1  | pl1*pvh1*pt2h1 | ph1*pvh1*pt21 | pm1*pvh1*pt21  | pl1*pvh1*pt21 | ph1*pvl1*pt2h1 | pm1*pvl1*pt2h1  | pl1*pvl1*pt2h1 | ph1*pvl1*pt21 | pm1*pvl1*pt21  | pl1*pvl1*pt21   |
ph2*pvh2*pt2h2 | pm2*pvh2*pt2h2  | pl2*pvh2*pt2h2 | ph2*pvh2*pt22 | pm2*pvh2*pt22  | pl2*pvh2*pt22 | ph2*pvl2*pt2h2 | pm2*pvl2*pt2h2  | pl2*pvl2*pt2h2 | ph2*pvl2*pt22 | pm2*pvl2*pt22  | pl2*pvl2*pt22   |
ph3*pvh3*pt2h3 | pm3*pvh3*pt2h3  | pl3*pvh3*pt2h3 | ph3*pvh3*pt23 | pm3*pvh3*pt23  | pl3*pvh3*pt23 | ph3*pvl3*pt2h3 | pm3*pvl3*pt2h3  | pl3*pvl3*pt2h3 | ph3*pvl3*pt23 | pm3*pvl3*pt23  | pl3*pvl3*pt23   |
ph4*pvh4*pt2h4 | pm4*pvh4*pt2h4  | pl4*pvh4*pt2h4 | ph4*pvh4*pt24 | pm4*pvh4*pt24  | pl4*pvh4*pt24 | ph4*pvl4*pt2h4 | pm4*pvl4*pt2h4  | pl4*pvl4*pt2h4 | ph4*pvl4*pt24 | pm4*pvl4*pt24  | pl4*pvl4*pt24   |
ph5*pvh5*pt2h5 | pm5*pvh5*pt2h5  | pl5*pvh5*pt2h5 | ph5*pvh5*pt25 | pm5*pvh5*pt25  | pl5*pvh5*pt25 | ph5*pvl5*pt2h5 | pm5*pvl5*pt2h5  | pl5*pvl5*pt2h5 | ph5*pvl5*pt25 | pm5*pvl5*pt25  | pl5*pvl5*pt25   |
ph6*pvh6*pt2h6 | pm6*pvh6*pt2h6  | pl6*pvh6*pt2h6 | ph6*pvh6*pt26 | pm6*pvh6*pt26  | pl6*pvh6*pt26 | ph6*pvl6*pt2h6 | pm6*pvl6*pt2h6  | pl6*pvl6*pt2h6 | ph6*pvl6*pt26 | pm6*pvl6*pt26  | pl6*pvl6*pt26   ;

retp(ppvec);

 
endp ;

ppval = pdist(theta0);

 D = gradp(&pdist,theta0) ;

VAR = D*clusvarmat*D' ;
ppvalse =sqrt(diag(VAR));

/*change the order here, because the estimation does not need to follow my labeling*/

margpp = ppval[1:7,.]' |  ppvalse[1:7,.]' | 
ppval[8:14,.]' |  ppvalse[8:14,.]' | 
ppval[15:21,.]' |  ppvalse[15:21,.]' |
ppval[22:28,.]' |  ppvalse[22:28,.]' |
ppval[29:35,.]' |  ppvalse[29:35,.]' |
ppval[36:42,.]' |  ppvalse[36:42,.]' 
 ;

jointpp = ppval[43:54,.]' |  ppvalse[43:54,.]' | 
ppval[55:66,.]' |  ppvalse[55:66,.]' | 
ppval[67:78,.]' |  ppvalse[67:78,.]' |
ppval[79:90,.]' |  ppvalse[79:90,.]' |
ppval[91:102,.]' |  ppvalse[91:102,.]' |
ppval[103:114,.]' |  ppvalse[103:114,.]'  ;


pvalpm = 0 ~ 1 ~ 1~ 1 ~ 1~ 1 ~1~1;
pvalpj = 0 ~ 1 ~ 1~ 1 ~ 1~ 1 ~1~1~1~ 1 ~ 1~ 1 ~ 1;
labelp = { BA BA.SE PSE PSE.SE HS HS.SE  } ;

printdistj = labelp' ~ jointpp ;

printdistm = labelp' ~ margpp ;


output file = Flex2012_Mout.txt reset ; 

/*--------------------------------(4)  Print the output-------------------*/


let frmt[7,3] = 
 "-*.*s"  8 8
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
;  


let frmtj[13,3] = 
 "-*.*s"  4 4
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3

;  


let frmtm[8,3] = 
 "-*.*s"  8 8
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
;  

let frmtx[9,3] = 
 "-*.*s"  8 8
"*.*lf" 7 3
"*.*lf" 7 3
"*.*lf" 7 3
"*.*lf" 7 3
"*.*lf" 7 3
"*.*lf" 7 3
"*.*lf" 7 3
"*.*lf" 7 3
;  


print "MODEL WITH THREE ABILITY POINTS OF SUPPORT" ;
print " " ;
print "PROB WEIGHTS  VARY BY PARENTAL EDUCATION" ;
print "6 EDUCATIONAL CATEGORIES " ;
print "MARGINAL EFFECTS EVALUATED AT THE MEAN CHARACTERISTICS OF THE TWO HIGH SCHOOL FAMILIES " ;
print "WITH THE UNOBSERVABLE DISTRIBUTIONS OF THE TWO HIGH SCHOOL FAMILIES" ;
print "PREDICTED PROBABILITIES EVALUATED AT EACH INDIVIDUALS X'S " ;
print " " ;
print " " ;
print " " ;
print " " ;

print "Marginal effects and SE clustered " ;
print " " ;
print " " ;
outprint = printfmt(printmar,pval);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;
print " " ;
print " " ;
print " " ;

print "PREDICTED VALUES" ;
print "PARENTAL EDUCATION IN THE COLUMNS" ;
print "BA, BA-MIX, PSE-MIX, HS, HS-MIX, LTHS" ;
print " " ;
print " " ;
outprint = printfm(printmarp,pvalp,frmt);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;


print "STANDARD ERRORS FOR PREDICTED VALUES" ;
print "PARENTAL EDUCATION IN THE COLUMNS" ;
print "BA, BA-MIX, PSE-MIX, HS, HS-MIX, LTHS" ;
print " " ;
print " " ;
outprint = printfm(printmarpse,pvalp,frmt);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;

print "Marginal probability distributions and standard errors" ;
print " H.CA M.CA L.CA  H.NC L.NC H.VP L.VP  " ;
print " " ;
print " " ;
outprint = printfm(printdistm,pvalpm,frmtm);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;

print "Joint probability distributions and standard errors" ;
print "  H.H.H  M.H.H L.H.H H.L.H M.L.H L.L.H  H.H.L M.H.L L.H.L H.L.L M.L.L L.L.L   " ;
print " " ;
print " " ;

outprint = printfm(printdistj,pvalpj,frmtj);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;


output off ;
