
datin = dat;

ed1 = sumc(datin[.,4])/rows(datin); 
ed2 = sumc(datin[.,5])/rows(datin) ;  
ed3 = sumc(datin[.,6])/rows(datin) ; 
ed4 = sumc(datin[.,7])/rows(datin)  ; 
ed5 = sumc(datin[.,8])/rows(datin)  ; 
ed6 = sumc(datin[.,9])/rows(datin) ; 

load bx1[25,15]  = bx1.raw;
load bx0[25,15]  = bx0.raw;

theta0 = theta;

/**************************************************************/

/*--------------------------------(1)  A procedure that defines the marginals as a function of beta -------------------*/

proc marg(theta);

local nn,hsvar1,hsvar0, flhs, parhs, pl1,plm1,ph1,pm1,pvh1,pvl1,probvec, th,tl,tm,vh,dpfactors,dpi0,dpi1,prob1, prob0, kk, marx, mm ;
local pl2,plm2,ph2,pm2,pvh2,pvl2, pl3,plm3,ph3,pm3,pvh3,pvl3, pl4,plm4,ph4,pm4,pvh4,pvl4, pl5,plm5,ph5,pm5,pvh5,pvl5,  pl6,plm6,ph6,pm6,pvh6,pvl6 ;
local  t2h, pt2h, pt2 ;
hsvar1 = bx1';
hsvar0 = bx0';
nn = rows(hsvar1);


flhs = theta[gt1:gvp]   ;


parhs = theta[1:hse] | flhs ;


/* Collect the probabilities*/


pl1 =  exp(theta[pt1f])/( 1+ exp(theta[pt1f])+ exp(theta[pt1f+1]));
ph1 =  exp(theta[pt1f+1])/( 1+ exp(theta[pt1f])+ exp(theta[pt1f+1])) ;
pm1 = 1/( 1+ exp(theta[pt1f+1])+ exp(theta[pt1f])) ;


pvh1 =  cdfn(theta[pvf]) ;
pvl1 =  1-pvh1;

pt2h =  cdfn(theta[pt2f]) ;
pt2 =  1-pt2h;

/* H M L 0 H M  L 0  H M L 0 H M  L 0*/
/* H H H H  0 0 0 0  H H H H  0 0 0 0*/
/* H H H H  H H H H 0 0 0 0 0 0 0 0*/




probvec = 
ph1*pvh1*pt2h ~ pl1*pvh1*pt2h~ pm1*pvh1*pt2h~    ph1*pvl1*pt2h~ pl1*pvl1*pt2h~ pm1*pvl1*pt2h ~
ph1*pvh1*pt2~ pl1*pvh1*pt2~ pm1*pvh1*pt2~    ph1*pvl1*pt2~ pl1*pvl1*pt2~ pm1*pvl1*pt2
;

/*the factors*/
th = theta[t1hf] ;
tl = theta[t1lf] ;
vh = theta[vpf] ;
t2h = theta[t2f] ;

dpfactors = th ~  tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1) ~  th ~ tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1)  |
t2h.*.ones(1,6) ~ zeros(1,6) |
vh~ vh~ vh~zeros(1,3)  ~vh~  vh ~ vh~zeros(1,3)  
 ;




/****************************CONTRIBUTIONS*************************/


/*first define the XB vectors*/


dpi0 = zeros(nn,12) ;
dpi1 = zeros(nn,12) ;

kk = 1 ;
do until kk > nn ;

mm = 1 ;

do until mm >12 ;

dpi0[kk,mm] = (hsvar0[kk,.]~dpfactors[.,mm]')*parhs ;
dpi1[kk,mm] = (hsvar1[kk,.]~dpfactors[.,mm]')*parhs ;

mm = mm + 1 ;

endo ;

kk = kk + 1 ;
endo;

prob1 = cdfn(dpi1)*probvec' ;
prob0 = cdfn(dpi0)*probvec' ;


marx =prob1-prob0 ;

retp(marx);

 
endp ;

marginals = marg(theta0);

D= gradp(&marg,theta0) ;

VAR = D*clusvarmat*D' ;

se = sqrt(diag(VAR));

margout = marginals~se ;
label = { fi	ped2	ped3	ped4	ped5	ped6 	native	rural	imm	moves	otpar	lonepar nsib bmon yune } ;
printmar = label' ~ margout ;
pval = 0 ~ 1 ~ 1;
outprint = printfmt(printmar,pval);





/*--------------------------------(2)  A procedure that defines the predicted probabilities as a function of B -------------------*/


ii = 1 ;

proc pred(theta);


local nn,hsvar1,hsvar0, flhs, parhs,pvh1,pvl1,probvec, th,tl,tm,vh,dpfactors,dpi0,dpi1,prob1, prob0, kk, marx, mm, pp ;
local pt2h, pt2 ;
local pvh2, pvh3, pvh4, pvh5, pvh6, pvl2, pvl3, pvl4, pvl5, pvl6 ;
local t2h, predicted,predse, pl1,pl2, pl3, pl4, pl5, pl6, pm1, pm2, pm3, pm4, pm5, pm6, ph1, ph2, ph3, ph4, ph5, ph6 ;

if ii < 2 ;
hsvar0 = bx0[.,2]';
endif ;

if ii > 1 ;
hsvar0 = bx1[.,ii]';
endif ;

nn = rows(hsvar0);


flhs = theta[gt1:gvp]   ;

parhs = theta[1:hse] | flhs ;


pl1 =  exp(theta[pt1f])/( 1+ exp(theta[pt1f])+ exp(theta[pt1f+1]));
ph1 =  exp(theta[pt1f+1])/( 1+ exp(theta[pt1f])+ exp(theta[pt1f+1])) ;
pm1 = 1/( 1+ exp(theta[pt1f+1])+ exp(theta[pt1f])) ;


pvh1 =  cdfn(theta[pvf]) ;
pvl1 =  1-pvh1;

pt2h =  cdfn(theta[pt2f]) ;
pt2 =  1-pt2h;

/* H M L 0 H M  L 0  H M L 0 H M  L 0*/
/* H H H H  0 0 0 0  H H H H  0 0 0 0*/
/* H H H H  H H H H 0 0 0 0 0 0 0 0*/




probvec = 
ph1*pvh1*pt2h ~ pl1*pvh1*pt2h~ pm1*pvh1*pt2h~    ph1*pvl1*pt2h~ pl1*pvl1*pt2h~ pm1*pvl1*pt2h ~
ph1*pvh1*pt2~ pl1*pvh1*pt2~ pm1*pvh1*pt2~    ph1*pvl1*pt2~ pl1*pvl1*pt2~ pm1*pvl1*pt2
;


/*the factors*/
th = theta[t1hf] ;
tl = theta[t1lf] ;
vh = theta[vpf] ;
t2h = theta[t2f] ;

dpfactors = th ~  tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1) ~  th ~ tl~  zeros(1,1)  ~  th ~ tl~  zeros(1,1)  |
t2h.*.ones(1,6) ~ zeros(1,6) |
vh~ vh~ vh~zeros(1,3)  ~vh~  vh ~ vh~zeros(1,3)  
 ;



dpi0 = zeros(nn,12) ;



kk = 1 ;
do until kk > nn ;

mm = 1 ;

do until mm >12 ;

dpi0[kk,mm] = (hsvar0[kk,.]~dpfactors[.,mm]')*parhs ;

mm = mm + 1 ;

endo ;

kk = kk + 1 ;
endo;

pp = cdfn(dpi0)' ;

retp(pp);

 
endp ;




predicted = zeros(12,6) ;
predse = zeros(12,6) ;

ii = 1 ;
do while ii < 7 ;

predicted[.,ii] = pred(theta0) ;

D = gradp(&pred,theta0);

VAR = D*clusvarmat*D' ;

predse[.,ii] = sqrt(diag(VAR));


ii = ii + 1 ;
endo;

/*change the order here, because the estimation does not need to follow my labeling*/

predictedx = predicted[1,.] | predicted[3,.] | predicted[2,.] |  predicted[4,.] | predicted[6,.] | predicted[5,.] |
 predicted[7,.] | predicted[9,.] | predicted[8,.] |  predicted[10,.] | predicted[12,.] | predicted[11,.] ;



predsex = predse[1,.] | predse[3,.] | predse[2,.] |  predse[4,.] | predse[6,.] | predse[5,.] |
 predse[7,.] | predse[9,.] | predse[8,.] |  predse[10,.] | predse[12,.] | predse[11,.] ;





labelp = { H.H.H  M.H.H L.H.H H.L.H M.L.H L.L.H  H.H.L M.H.L L.H.L H.L.L M.L.L L.L.L } ;
printmarp = labelp' ~ predictedx ;
pvalp = 0 ~ 1 ~ 1~ 1 ~ 1~ 1 ~ 1;

printmarpse = labelp' ~ predsex ;


/*--------------------------------(4)  A procedure that defines the probability weights as a function of B -------------------*/


proc pdist(theta);

local probvec, ppvec ;
local pt2h, pt2 ;
local t2h, predicted,predse, pl1,pl2, pl3, pl4, pl5, pl6, pm1, pm2, pm3, pm4, pm5, pm6, ph1, ph2, ph3, ph4, ph5, ph6 ;
local pvh1, pvl1  ;



pl1 =  exp(theta[pt1f])/( 1+ exp(theta[pt1f])+ exp(theta[pt1f+1]));
ph1 =  exp(theta[pt1f+1])/( 1+ exp(theta[pt1f])+ exp(theta[pt1f+1])) ;
pm1 = 1/( 1+ exp(theta[pt1f+1])+ exp(theta[pt1f])) ;


pvh1 =  cdfn(theta[pvf]) ;
pvl1 =  1-pvh1;

pt2h =  cdfn(theta[pt2f]) ;
pt2 =  1-pt2h;

/* H M L 0 H M  L 0  H M L 0 H M  L 0*/
/* H H H H  0 0 0 0  H H H H  0 0 0 0*/
/* H H H H  H H H H 0 0 0 0 0 0 0 0*/




probvec = 
ph1*pvh1*pt2h ~ pl1*pvh1*pt2h~ pm1*pvh1*pt2h~    ph1*pvl1*pt2h~ pl1*pvl1*pt2h~ pm1*pvl1*pt2h ~
ph1*pvh1*pt2~ pl1*pvh1*pt2~ pm1*pvh1*pt2~    ph1*pvl1*pt2~ pl1*pvl1*pt2~ pm1*pvl1*pt2
;


ppvec = ph1   | pl1 | pm1 | pvh1 | pvl1 |  pt2h | pt2 | probvec' ;


retp(ppvec);

 
endp ;

ppval = pdist(theta0);

 D = gradp(&pdist,theta0) ;

VAR = D*clusvarmat*D' ;
ppvalse =sqrt(diag(VAR));

/*change the order here, because the estimation does not need to follow my labeling*/

margpp = ppval[1,.]~ppval[3,.]~ppval[2,.]' ~ ppval[4:7,.]' | ppvalse[1,.]~ppvalse[3,.]~ppvalse[2,.]' ~ ppvalse[4:7,.]'  ;

jointpp = 
ppval[8,.]~ppval[10,.]~ppval[9,.]'~ppval[11,.] ~ ppval[13,.]~ ppval[12,.]' ~
ppval[14,.]~ppval[16,.]~ppval[15,.]'~ppval[17,.] ~ ppval[19,.]~ ppval[18,.]' |
ppvalse[8,.]~ppvalse[10,.]~ppvalse[9,.]'~ppvalse[11,.] ~ ppvalse[13,.]~ ppvalse[12,.]' ~
ppvalse[14,.]~ppvalse[16,.]~ppvalse[15,.]'~ppvalse[17,.] ~ ppvalse[19,.]~ ppvalse[18,.]' ;

pvalpm = 0 ~ 1 ~ 1~ 1 ~ 1~ 1 ~1~1 ;
pvalpj = 0 ~ 1 ~ 1~ 1 ~ 1~ 1 ~1~1~1 ~ 1 ~1~1~1 ;

labelp = { prob SE  } ;

printdistj = labelp' ~ jointpp ;

printdistm = labelp' ~ margpp ;

output file =out\CON_t2_3PMout.txt reset ; 

/*--------------------------------(4)  Print the output-------------------*/


let frmt[7,3] = 
 "-*.*s"  8 8
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
;  


let frmtj[13,3] = 
 "-*.*s"  4 4
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3
"*.*lf" 6 3

;  


let frmtm[8,3] = 
 "-*.*s"  8 8
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
"*.*lf" 10 5
;  

print "MODEL WITH THREE ABILITY POINTS OF SUPPORT" ;
print " " ;
print "PROB WEIGHTS DO NOT VARY BY PARENTAL EDUCATION" ;
print "INCLUDES NON-COGNATIVE FACTORS" ;
print "NON-COG MEASUREMENTS DO NOT INCLUDE T1" ;

print " " ;
print " " ;
print " " ;
print " " ;

print "Marginal effects and SE clustered " ;
print " " ;
print " " ;
outprint = printfmt(printmar,pval);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;
print " " ;
print " " ;
print " " ;

print "PREDICTED VALUES" ;
print "PARENTAL EDUCATION IN THE COLUMNS" ;
print "BA, BA-MIX, PSE-MIX, HS, HS-MIX, LTHS" ;
print " " ;
print " " ;
outprint = printfm(printmarp,pvalp,frmt);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;


print "STANDARD ERRORS FOR PREDICTED VALUES" ;
print "PARENTAL EDUCATION IN THE COLUMNS" ;
print "BA, BA-MIX, PSE-MIX, HS, HS-MIX, LTHS" ;
print " " ;
print " " ;
outprint = printfm(printmarpse,pvalp,frmt);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;

print "Marginal probability distributions and standard errors" ;
print " " ;
print " " ;

outprint = printfm(printdistm,pvalpm,frmtm);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;

print "Joint probability distributions and standard errors" ;
print " " ;
print " " ;

outprint = printfm(printdistj,pvalpj,frmtj);

print " " ;
print " " ;
print " " ;
print "***************************************************************" ;


output off ;
